{"version":3,"sources":["webpack:///./src/components/floating-image.js","webpack:///./src/pages/who-am-i.js","webpack:///./src/components/page-title.js"],"names":["Image","_styled","Img","target","rhythm","options","blockMarginBottom","gutter","default","mq","tablet","desktop","FloatingImage","_ref","imageMobile","imageDesktop","title","backgroundColor","___EmotionJSX","React","Fragment","fixed","media","phablet","replace","trim","WhoAmI","data","location","Layout","image","coverImage","childImageSharp","fluid","PageTitle","_ref2","name","styles","children","css"],"mappings":"yLAOA,MAAMA,EAAQC,YAAOC,IAAG,CAAAC,OAAA,aAAVF,CAAW,2CAGNG,YAAmC,EAA5BC,IAAQC,mBAAsB,gBACvCF,YAAmC,EAA5BC,IAAQC,mBAAsB,kBACnCC,SAAOC,QAAO,IAE7BC,KAAGC,OAAM,kBACQH,SAAOG,OAAM,KAG9BD,KAAGE,QAAO,kBACOJ,SAAOI,QAAO,MAqCpBC,IAjCOC,IAAA,IAAC,YACrBC,EAAW,aACXC,EAAY,MACZC,EAAK,gBACLC,GACDJ,EAAA,OACCK,YAACC,IAAMC,SAAQ,KAabF,YAAClB,EAAK,CACJqB,MAAO,CACLP,EACA,IACKC,EACHO,MAAOb,KAAGc,QAAQC,QAAQ,SAAU,IAAIC,SAG5CR,gBAAiBA,IAAoC,EACrDD,MAAOA,O,kCCnDb,6EAwCeU,UAhCAb,IAAA,IAAC,KAAEc,EAAI,SAAEC,GAAUf,EAAA,OAChCK,YAACW,IAAM,CACLD,SAAUA,EACVE,MAAOH,EAAKI,WAAWC,gBAAgBC,OAGvCf,YAACgB,IAAS,KAAC,aAMXhB,YAAA,SAAG,wQAGHA,YAAA,SAAG,iSAEHA,YAAA,SAAG,kOAEHA,YAAA,SAAG,gPAEHA,YAAA,SAAG,oNACHA,YAAA,SAAG,qI,4DC9BkB,IAAAiB,EAAA,CAAAC,KAAA,SAAAC,OAAA,iBAIVH,IAFGrB,IAAA,IAAC,SAAEyB,GAAUzB,EAAA,OAAKK,YAAA,MAAIqB,IAAGJ,GAAqBG","file":"component---src-pages-who-am-i-js-3bd4009b51afdbf950d7.js","sourcesContent":["import React from \"react\"\nimport Img from \"gatsby-image\"\nimport styled from \"@emotion/styled\"\n\nimport { rhythm, options } from \"../utils/typography\"\nimport { mq, gutter } from \"../utils/presets\"\n\nconst Image = styled(Img)`\n  display: block;\n  float: right;\n  margin-bottom: ${rhythm(options.blockMarginBottom * 2)};\n  margin-left: ${rhythm(options.blockMarginBottom * 2)};\n  margin-right: -${gutter.default};\n\n  ${mq.tablet} {\n    margin-right: -${gutter.tablet};\n  }\n\n  ${mq.desktop} {\n    margin-right: -${gutter.desktop};\n  }\n`\n\nconst FloatingImage = ({\n  imageMobile,\n  imageDesktop,\n  title,\n  backgroundColor,\n}) => (\n  <React.Fragment>\n    {/*\n        gatsby-image sets a couple of inline styles on its outer\n        container and allows overriding via its `style` prop. One\n        of these inline styles is `display: inline-block´.\n\n        In this case we have two images, one for mobile and one\n        for desktop, and toggle their visibility with `display`,\n        so we need to override the gatsby-image default to make\n        our own styles work.\n\n        https://www.gatsbyjs.org/packages/gatsby-image/#gatsby-image-props\n    */}\n    <Image\n      fixed={[\n        imageMobile,\n        {\n          ...imageDesktop,\n          media: mq.phablet.replace(`@media`, ``).trim(),\n        },\n      ]}\n      backgroundColor={backgroundColor ? backgroundColor : false}\n      title={title}\n    />\n  </React.Fragment>\n)\n\nexport default FloatingImage\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport FloatingImage from \"../components/floating-image\"\nimport PageTitle from \"../components/page-title\"\nimport Layout from \"../components/layout\"\n\nconst WhoAmI = ({ data, location }) => (\n  <Layout\n    location={location}\n    image={data.coverImage.childImageSharp.fluid}\n    // imageTitle={`“${data.coverImage.title}” by ${data.coverImage.credit} (via unsplash.com)`}\n  >\n    <PageTitle>Who am I?</PageTitle>\n    {/* <FloatingImage\n      imageMobile={data.floatingImageMobile.localFile.childImageSharp.fixed}\n      imageDesktop={data.floatingImage.localFile.childImageSharp.fixed}\n      title={`“${data.floatingImage.title}” by ${data.floatingImage.credit} (via unsplash.com)`}\n    /> */}\n    <p>\n    I kickstarted my career as a frontend developer in a US company focused on detailed design engineering. We crafted an application to calculate the PSI load of structural designs, wielding the power of Python, PHP, C#, .NET, and JavaScript like digital wizards.\n    </p>\n    <p>After that, I switched gears and joined a BPO company, where I developed applications to support customer representatives, aiming to streamline their Average Handling Time (AHT) and Customer Satisfaction Score (CSS). It was all about making their lives a bit easier and more efficient.\n    </p>\n    <p>My journey then took me to an IT firm, where I dove into the world of ERP systems. From Sales to Shipping and Tracking, I had my hands in everything, ensuring that the gears of enterprise resource planning turned smoothly.\n    </p>\n    <p>And now, I'm working at a cutting-edge company that specializes in AI hiring systems. We're on a mission to revolutionize the hiring process, leveraging artificial intelligence to find the perfect candidates faster and more effectively.\n    </p>\n    <p>Recently, I've been diving deep into C++, Golang, and R to tackle some exciting new projects. These languages are helping me push the boundaries of what's possible and continue my quest for coding excellence.</p>\n    <p>So, that's a bit about me—your guide on this tech adventure. From frontend magic to backend sorcery, and everything in between\n    </p>\n    {/* <Img\n      fluid={data.fullWidthImage.localFile.childImageSharp.fluid}\n      title={`“${data.fullWidthImage.title}” by ${data.fullWidthImage.credit} (via unsplash.com)`}\n    />\n    <p /> */}\n  </Layout>\n)\n\nexport default WhoAmI\n\nexport const query = graphql`\n  query {\n    coverImage: file(\n      relativePath: { regex: \"/table/\" }\n    ) {\n      childImageSharp {\n        fluid(\n          maxWidth: 720\n          quality: 80\n        ) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    # floatingImageMobile: unsplashImagesYaml(title: { eq: \"Cacti\" }) {\n    #   localFile {\n    #     childImageSharp {\n    #       fixed(width: 120) {\n    #         ...GatsbyImageSharpFixed_withWebp\n    #       }\n    #     }\n    #   }\n    # }\n    # floatingImage: unsplashImagesYaml(title: { eq: \"Cacti\" }) {\n    #   credit\n    #   title\n    #   localFile {\n    #     childImageSharp {\n    #       fixed(width: 200) {\n    #         ...GatsbyImageSharpFixed_withWebp\n    #       }\n    #     }\n    #   }\n    # }\n    # fullWidthImage: unsplashImagesYaml(title: { eq: \"Tennis court\" }) {\n    #   credit\n    #   title\n    #   localFile {\n    #     childImageSharp {\n    #       fluid(maxWidth: 600) {\n    #         ...GatsbyImageSharpFluid_withWebp\n    #       }\n    #     }\n    #   }\n    # }\n  }\n`\n","import React from \"react\"\n\nconst PageTitle = ({ children }) => <h2 css={{ marginTop: 0 }}>{children}</h2>\n\nexport default PageTitle\n"],"sourceRoot":""}