{"version":3,"sources":["webpack:///./src/components/floating-image.js","webpack:///./src/components/page-title.js","webpack:///./src/pages/404.js"],"names":["rhythm","options","blockMarginBottom","gutter","default","mq","tablet","desktop","_ref2","name","styles","PageTitle","_ref","children","___EmotionJSX","css","NotFound","data","location","Layout","image","coverImage","childImageSharp","fluid","imageBackgroundColor","href"],"mappings":"8KAUmBA,YAAmC,EAA5BC,IAAQC,mBACjBF,YAAmC,EAA5BC,IAAQC,mBACbC,SAAOC,QAEtBC,KAAGC,OACcH,SAAOG,OAGxBD,KAAGE,QACcJ,SAAOI,S,4DCnBH,IAAAC,EAAA,CAAAC,KAAA,SAAAC,OAAA,iBAIVC,IAFGC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAKE,YAAA,MAAIC,IAAGP,GAAqBK,K,kCCFhE,6EAyBeG,UAlBEJ,IAAA,IAAC,KAAEK,EAAI,SAAEC,GAAUN,EAAA,OAClCE,YAACK,IAAM,CACLD,SAAUA,EACVE,MAAOH,EAAKI,WAAWC,gBAAgBC,MAEvCC,qBAAqB,WAErBV,YAACH,IAAS,KAAC,wBACXG,YAAA,SAAG,gIACHA,YAAA,SAAG,+CAA4CA,YAAA,KAAGW,KAAK,KAAI,YAAY","file":"component---src-pages-404-js-46891eadf10bab55f2e0.js","sourcesContent":["import React from \"react\"\nimport Img from \"gatsby-image\"\nimport styled from \"@emotion/styled\"\n\nimport { rhythm, options } from \"../utils/typography\"\nimport { mq, gutter } from \"../utils/presets\"\n\nconst Image = styled(Img)`\n  display: block;\n  float: right;\n  margin-bottom: ${rhythm(options.blockMarginBottom * 2)};\n  margin-left: ${rhythm(options.blockMarginBottom * 2)};\n  margin-right: -${gutter.default};\n\n  ${mq.tablet} {\n    margin-right: -${gutter.tablet};\n  }\n\n  ${mq.desktop} {\n    margin-right: -${gutter.desktop};\n  }\n`\n\nconst FloatingImage = ({\n  imageMobile,\n  imageDesktop,\n  title,\n  backgroundColor,\n}) => (\n  <React.Fragment>\n    {/*\n        gatsby-image sets a couple of inline styles on its outer\n        container and allows overriding via its `style` prop. One\n        of these inline styles is `display: inline-block´.\n\n        In this case we have two images, one for mobile and one\n        for desktop, and toggle their visibility with `display`,\n        so we need to override the gatsby-image default to make\n        our own styles work.\n\n        https://www.gatsbyjs.org/packages/gatsby-image/#gatsby-image-props\n    */}\n    <Image\n      fixed={[\n        imageMobile,\n        {\n          ...imageDesktop,\n          media: mq.phablet.replace(`@media`, ``).trim(),\n        },\n      ]}\n      backgroundColor={backgroundColor ? backgroundColor : false}\n      title={title}\n    />\n  </React.Fragment>\n)\n\nexport default FloatingImage\n","import React from \"react\"\n\nconst PageTitle = ({ children }) => <h2 css={{ marginTop: 0 }}>{children}</h2>\n\nexport default PageTitle\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport FloatingImage from \"../components/floating-image\"\nimport PageTitle from \"../components/page-title\"\nimport Layout from \"../components/layout\"\n\nconst NotFound = ({ data, location }) => (\n  <Layout\n    location={location}\n    image={data.coverImage.childImageSharp.fluid}\n    // imageTitle={`“${data.coverImage.title}” by ${data.coverImage.credit}`}\n    imageBackgroundColor=\"#F0C450\"\n  >\n    <PageTitle>Oops! Page Not Found</PageTitle>\n    <p>Well, this is awkward... It looks like you've stumbled upon a page that doesn't exist. Maybe it took an unexpected vacation?</p>\n    <p>While you're here, why not head back to the <a href=\"/\">homepage</a> or explore some of our latest articles? If you need assistance, feel free to reach out. We're here to help you find what you're looking for!</p>\n    {/* <Img\n      fluid={data.fullWidthImage.localFile.childImageSharp.fluid}\n      backgroundColor=\"#F9D6CE\"\n      title={`“${data.fullWidthImage.title}” by ${data.fullWidthImage.credit}`}\n    /> */}\n  </Layout>\n)\n\nexport default NotFound\n\nexport const query = graphql`\n  query {\n    coverImage: file(\n      relativePath: { regex: \"/small-plants/\" }\n    ) {\n      childImageSharp {\n        fluid(\n          maxWidth: 720\n          quality: 80\n        ) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}