{"version":3,"sources":["webpack:///./src/pages/contact-me.js","webpack:///./src/components/floating-image.js","webpack:///./src/components/page-title.js"],"names":["ContactMe","_ref","data","location","___EmotionJSX","Layout","image","coverImage","childImageSharp","fluid","imageTitle","imageBackgroundColor","PageTitle","href","alt","rhythm","options","blockMarginBottom","gutter","default","mq","tablet","desktop","_ref2","name","styles","children","css"],"mappings":"2FAAA,6EAmCeA,UA5BGC,IAAA,IAAC,KAAEC,EAAI,SAAEC,GAAUF,EAAA,OACnCG,YAACC,IAAM,CACLF,SAAUA,EACVG,MAAOJ,EAAKK,WAAWC,gBAAgBC,MACvCC,WAAY,oFACZC,qBAAqB,WAErBP,YAACQ,IAAS,KAAC,YAQXR,YAAA,SAAG,6BACyBA,YAAA,KAAGS,KAAK,8BAA8BC,IAAI,6BAA4B,UAAU,6QAE5GV,YAAA,SAAG,qCAAkCA,YAAA,KAAGS,KAAK,wDAAwDC,IAAI,iBAAgB,YAAa,mD,qHCfvHC,YAAmC,EAA5BC,IAAQC,mBACjBF,YAAmC,EAA5BC,IAAQC,mBACbC,SAAOC,QAEtBC,KAAGC,OACcH,SAAOG,OAGxBD,KAAGE,QACcJ,SAAOI,S,4DCnBH,IAAAC,EAAA,CAAAC,KAAA,SAAAC,OAAA,iBAIVb,IAFGX,IAAA,IAAC,SAAEyB,GAAUzB,EAAA,OAAKG,YAAA,MAAIuB,IAAGJ,GAAqBG","file":"component---src-pages-contact-me-js-0d0e27c2993b1565139b.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport FloatingImage from \"../components/floating-image\"\nimport PageTitle from \"../components/page-title\"\nimport Layout from \"../components/layout\"\n\nconst ContactMe = ({ data, location }) => (\n  <Layout\n    location={location}\n    image={data.coverImage.childImageSharp.fluid}\n    imageTitle={`“alexander-andrews-HgUDpaGPTEA-unsplash-edited” by alexander-andrews via unsplash`}\n    imageBackgroundColor=\"#F0C450\"\n  >\n    <PageTitle>accounts</PageTitle>\n    {/* <FloatingImage\n      imageMobile={data.floatingImageMobile.childImageSharp.fixed}\n      imageDesktop={data.floatingImageMobile.childImageSharp.fixed}\n      title={`thinking about something new`}\n      // title={`“${data.floatingImage.title}” by ${data.floatingImage.credit}`}\n      backgroundColor=\"#DB3225\"\n    /> */}\n    <p>\n      I've been prowling around <a href=\"https://github.com/nenjotsu\" alt=\"nenjotsu github's account\">GitHub</a> like it's my own personal treasure trove, hunting down free OpenAI APIs and tokens. Also, I've been uploading some of my mad scientist programming experiments. Because, you know, sharing is caring—and collaboration is the key to not accidentally blowing things up.\n    </p>\n    <p>Feel free to drop me a message on <a href=\"https://www.linkedin.com/in/renenjo-valente-4435b941/\" alt=\"linkedin page\">LinkedIn</a>, and we can chat about potential solutions.</p>\n\n    {/* <Img\n      fluid={data.fullWidthImage.localFile.childImageSharp.fluid}\n      backgroundColor=\"#F9D6CE\"\n      title={`“${data.fullWidthImage.title}” by ${data.fullWidthImage.credit}`}\n    /> */}\n  </Layout>\n)\n\nexport default ContactMe\n\nexport const query = graphql`\n  query {\n    coverImage: file(\n      relativePath: { regex: \"/alexander-andrews-phone/\" }\n    ) {\n      childImageSharp {\n        fluid(\n          maxWidth: 720\n          quality: 80\n        ) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    # floatingImageMobile: file(\n    #   relativePath: { regex: \"/thinking/\" }\n    # ) {\n    #   childImageSharp {\n    #     fixed(width: 200) {\n    #       ...GatsbyImageSharpFixed_noBase64\n    #     }\n    #   }\n    # }\n    # floatingImage: unsplashImagesYaml(title: { eq: \"Pug with red hat\" }) {\n    #   credit\n    #   title\n    #   localFile {\n    #     childImageSharp {\n    #       fixed(width: 200) {\n    #         ...GatsbyImageSharpFixed_noBase64\n    #       }\n    #     }\n    #   }\n    # }\n    # fullWidthImage: unsplashImagesYaml(title: { eq: \"Cacti\" }) {\n    #   credit\n    #   title\n    #   localFile {\n    #     childImageSharp {\n    #       fluid(maxWidth: 600) {\n    #         ...GatsbyImageSharpFluid_noBase64\n    #       }\n    #     }\n    #   }\n    # }\n  }\n`\n","import React from \"react\"\nimport Img from \"gatsby-image\"\nimport styled from \"@emotion/styled\"\n\nimport { rhythm, options } from \"../utils/typography\"\nimport { mq, gutter } from \"../utils/presets\"\n\nconst Image = styled(Img)`\n  display: block;\n  float: right;\n  margin-bottom: ${rhythm(options.blockMarginBottom * 2)};\n  margin-left: ${rhythm(options.blockMarginBottom * 2)};\n  margin-right: -${gutter.default};\n\n  ${mq.tablet} {\n    margin-right: -${gutter.tablet};\n  }\n\n  ${mq.desktop} {\n    margin-right: -${gutter.desktop};\n  }\n`\n\nconst FloatingImage = ({\n  imageMobile,\n  imageDesktop,\n  title,\n  backgroundColor,\n}) => (\n  <React.Fragment>\n    {/*\n        gatsby-image sets a couple of inline styles on its outer\n        container and allows overriding via its `style` prop. One\n        of these inline styles is `display: inline-block´.\n\n        In this case we have two images, one for mobile and one\n        for desktop, and toggle their visibility with `display`,\n        so we need to override the gatsby-image default to make\n        our own styles work.\n\n        https://www.gatsbyjs.org/packages/gatsby-image/#gatsby-image-props\n    */}\n    <Image\n      fixed={[\n        imageMobile,\n        {\n          ...imageDesktop,\n          media: mq.phablet.replace(`@media`, ``).trim(),\n        },\n      ]}\n      backgroundColor={backgroundColor ? backgroundColor : false}\n      title={title}\n    />\n  </React.Fragment>\n)\n\nexport default FloatingImage\n","import React from \"react\"\n\nconst PageTitle = ({ children }) => <h2 css={{ marginTop: 0 }}>{children}</h2>\n\nexport default PageTitle\n"],"sourceRoot":""}